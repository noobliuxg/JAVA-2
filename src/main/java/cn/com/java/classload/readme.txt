1.先加载static资源，然后再初始化非static资源，先处化static{}再初始化static变量，再执行{}，再初始化非static变量，最后执行contrust

2.别人的总结：
    由此可见，实例化子类的时候，若此类未被加载过，首先加载是父类的类对象，然后加载子类的类对象，接着实例化父类，最后实例化子类，若此类被加载过，不再加载父类和子类的类对象。
    接下来是加载顺序，当加载类对象时，首先初始化静态属性，然后执行静态块；当实例化对象时，首先执行构造块（直接写在类中的代码块），然后执行构造方法。
    至于各静态块和静态属性初始化哪个些执行，是按代码的先后顺序。属性、构造块（也就是上面的实例块）、构造方法之间的执行顺序（但构造块一定会在构造方法前执行），也是按代码的先后顺序。

3.个人的理解加实战得出的结论：
    实例化子类的时候，
        比如：A extends B ,
            类的加载阶段：这时先执行B类中的static{}代码块，再初始化B类中的static属性，然后执行A类中的static{}代码块，再初始化A类中的static属性，
            类的实例化阶段：先执行B类中的{}代码块，再初始化B类中的非static属性，再执行B类中的构造函数，然后再执行A类中的{}代码块，再初始化A类中的非static属性，最后执行A类中的构造函数
